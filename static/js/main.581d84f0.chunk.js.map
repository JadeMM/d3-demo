{"version":3,"sources":["components/BarChart.js","components/TempDisplay.js","components/ThreeLittleCircles.js","components/Clock.js","components/Blank_US_Map_(states_only).js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["BarChart","componentDidMount","drawBarChart","state","data","canvasHeight","canvasWidth","scale","svgCanvas","d3","refs","canvas","append","attr","style","selectAll","enter","datapoint","iteration","i","text","className","ref","React","Component","TempDisplay","temperatures","temperatureData","transition","duration","ThreeLittleCircles","drawCircles","exit","remove","Clock","draw","drawClockFace","drawClockTicks","clockHands","setInterval","getTime","drawClockHands","currentTime","Date","setState","unit","value","getSeconds","getMinutes","getHours","pi","Math","PI","domain","range","clockNumbers","arc","innerRadius","outerRadius","startAngle","endAngle","d","scaleSecs","scaleMins","scaleHours","secondArc","minuteArc","hourArc","BlankMap","xmlns","width","height","fill","id","stroke","stroke-width","cx","cy","r","opacity","Map","App","showView","view","onClick","this","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.581d84f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport default class BarChart extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [ 2, 4, 2, 6, 8 ],\r\n            canvasHeight : 400,\r\n            canvasWidth : 600,\r\n            scale : 20\r\n        }\r\n    }\r\n\r\n    //execute d3 code\r\n    componentDidMount = () => {\r\n        this.drawBarChart();\r\n    }\r\n\r\n    //draw bar chart\r\n    drawBarChart = () => {\r\n        const {data, canvasHeight, canvasWidth, scale} = this.state;\r\n\r\n        //create canvas\r\n        const svgCanvas = d3.select(this.refs.canvas)\r\n            .append(\"svg\")\r\n            .attr(\"width\", canvasWidth)\r\n            .attr(\"height\", canvasHeight)\r\n            .style(\"border\", \"1px solid black\")\r\n        \r\n        //for each rectangle in canvas, attach data\r\n        //for each data, we append a rect of 40 x data*20 and give it a x,y point\r\n        svgCanvas.selectAll(\"rect\")\r\n            .data(data)\r\n            .enter()\r\n                .append(\"rect\")\r\n                .attr(\"width\", 40)\r\n                .attr(\"height\", (datapoint) => datapoint * scale)\r\n                .attr(\"fill\", \"steelBlue\")\r\n                .attr(\"x\", (datapoint, iteration) => iteration * 45)\r\n                .attr(\"y\", (datapoint) => canvasHeight - (datapoint * scale))\r\n\r\n        svgCanvas.selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n                .append(\"text\")\r\n                .style(\"fill\", \"white\")\r\n                .attr(\"x\", (datapoint, i) => i * 45 + 14)\r\n                .attr(\"y\", (datapoint) => canvasHeight - (datapoint * scale) + 20)\r\n                .text(datapoint => datapoint)\r\n\r\n    }\r\n    render(){\r\n        return <div className='viewHolder' ref='canvas'/>\r\n    } \r\n}","import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport default class TempDisplay extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            temperatureData: [ 8, 5, 13, 9, 12 ]\r\n        }\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        d3.select(this.refs.temperatures)\r\n            .selectAll(\"h2\")\r\n            .data(this.state.temperatureData)\r\n            .enter()\r\n                .append(\"h2\")\r\n                .text((datapoint) => `${datapoint} `)\r\n                .transition()\r\n                .duration(5000)\r\n                .style(\"color\", (datapoint) => {\r\n                    return datapoint > 10 ?  \"red\" :  \"blue\"\r\n                })\r\n          \r\n        d3.select(this.refs.temperatures)\r\n            .selectAll(\"h2\")\r\n            .append(\"span\")\r\n            .text('datapoint')\r\n            .style(\"color\", \"black\")\r\n    }\r\n\r\n    render() {\r\n        return <div className='viewHolder' ref=\"temperatures\"/>\r\n    }\r\n}","import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport default class ThreeLittleCircles extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [20, 30 , 40, 50],\r\n            canvasHeight : 400,\r\n            canvasWidth : 600\r\n        }\r\n    }\r\n\r\n    //execute d3 code\r\n    componentDidMount = () => {\r\n        this.drawCircles();\r\n    }\r\n\r\n    //draw chart\r\n    drawCircles = () => {\r\n        const {data, canvasHeight, canvasWidth} = this.state;\r\n\r\n        //create canvas\r\n        const svgCanvas = d3.select(this.refs.canvas)\r\n            .append(\"svg\")\r\n            .attr(\"width\", canvasWidth)\r\n            .attr(\"height\", canvasHeight)\r\n            .style(\"border\", \"1px solid black\")\r\n        \r\n        svgCanvas.selectAll(\"circle\")\r\n            .data(data)\r\n            .enter()\r\n                .append(\"circle\")\r\n                .attr(\"fill\", \"steelblue\")\r\n                .attr(\"r\", (datapoint) => datapoint)\r\n                .attr(\"cx\", (datapoint, i) => i * 100 + 50)\r\n                .attr(\"cy\", 90)\r\n\r\n        svgCanvas.selectAll(\"circle\")\r\n        .data([1, 2])\r\n        .exit()\r\n            .transition()\r\n            .duration(2000)\r\n            .attr(\"fill\", \"white\")\r\n            .transition()\r\n            .duration(3000)\r\n            .remove()\r\n    }\r\n    render(){\r\n        return <div className='viewHolder' ref='canvas'/>\r\n    } \r\n}","import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport default class Clock extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            canvasHeight : 400,\r\n            canvasWidth : 600,\r\n            data : [\r\n                {\r\n                    unit: 'sec',\r\n                    value: 25\r\n                },\r\n                {\r\n                    unit: 'min',\r\n                    value: 30\r\n                },\r\n                {\r\n                    unit: 'hour',\r\n                    value: 12\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    //get time and execute d3 code\r\n    componentDidMount = () => {\r\n        let canvas = this.draw();\r\n        this.drawClockFace(canvas);\r\n        this.drawClockTicks(canvas);\r\n        const clockHands = canvas.append(\"g\")\r\n            .attr(\"transform\", `translate(${this.state.canvasWidth/2},${this.state.canvasHeight/2})`)\r\n\r\n        setInterval(() => {\r\n            this.getTime();\r\n            this.drawClockHands(clockHands);\r\n        }, 1000)\r\n    }\r\n\r\n    getTime = () => {\r\n        let currentTime = new Date();\r\n        this.setState({\r\n            data: [\r\n                {\r\n                    unit: 'sec',\r\n                    value: currentTime.getSeconds()\r\n                },\r\n                {\r\n                    unit: 'min',\r\n                    value: currentTime.getMinutes()\r\n                },\r\n                {\r\n                    unit: 'hour',\r\n                    value: currentTime.getHours() + currentTime.getMinutes()/60\r\n                }\r\n            ]\r\n        })\r\n        \r\n    }\r\n\r\n    drawClockFace = (canvas) => {\r\n        const {canvasHeight, canvasWidth} = this.state;\r\n\r\n        //create clock border\r\n        canvas.append(\"circle\")\r\n        .attr(\"r\", canvasHeight/2)\r\n        .attr(\"cx\", canvasWidth/2)\r\n        .attr(\"cy\", canvasHeight/2)\r\n\r\n        //create clock face\r\n        canvas.append(\"circle\")\r\n        .attr(\"r\", canvasHeight/2-5)\r\n        .attr(\"fill\", \"white\")\r\n        .attr(\"cx\", canvasWidth/2)\r\n        .attr(\"cy\", canvasHeight/2)\r\n\r\n        //clock inner dot\r\n        canvas.append(\"circle\")\r\n            .attr(\"r\", 5)\r\n            .attr(\"cx\", canvasWidth/2)\r\n            .attr(\"cy\", canvasHeight/2)\r\n\r\n    }\r\n\r\n    drawClockTicks = (canvas) => {\r\n        const {canvasHeight, canvasWidth} = this.state;\r\n        const data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\n        const pi = Math.PI;\r\n        const scale = d3.scaleLinear().domain([1, 13]).range([0, 2 * pi]);\r\n\r\n        const clockNumbers = canvas.append(\"g\")\r\n            .attr(\"transform\", `translate(${canvasWidth/2},${canvasHeight/2})`)\r\n\r\n        const arc = d3.arc()\r\n            .innerRadius(canvasHeight/2 - 30)\r\n            .outerRadius(canvasHeight/2-2)\r\n            .startAngle(data => scale(data))\r\n            .endAngle(data => scale(data))\r\n\r\n        //draw ticks\r\n        clockNumbers.selectAll(\"path\")\r\n            .data(data)\r\n            .enter()\r\n                .append(\"path\")\r\n                .attr(\"d\", d => arc(d))\r\n                .attr(\"stroke\", \"black\")\r\n                .attr(\"stroke-width\", \"4\")\r\n                .attr(\"fill\", \"none\")\r\n        \r\n    }\r\n\r\n    drawClockHands = (canvas) => {\r\n        const {data, canvasHeight} = this.state;\r\n\r\n        const pi = Math.PI;\r\n        const scaleSecs = d3.scaleLinear().domain([0, 59 + 999/1000]).range([0, 2 * pi]);\r\n        const scaleMins = d3.scaleLinear().domain([0, 59 + 59/60]).range([0, 2 * pi]);\r\n        const scaleHours = d3.scaleLinear().domain([0, 11 + 59/60]).range([0, 2 * pi]);\r\n\r\n        //clear previous hands\r\n        canvas.selectAll(\"path\").remove();\r\n\r\n        //create arcs for hands\r\n        const secondArc = d3.arc()\r\n            .innerRadius(0)\r\n            .outerRadius(canvasHeight/2 - 20)\r\n            .startAngle(d => scaleSecs(d.value))\r\n            .endAngle(d => scaleSecs(d.value))\r\n\r\n        const minuteArc = d3.arc()\r\n            .innerRadius(0)\r\n            .outerRadius(canvasHeight/2 - 20)\r\n            .startAngle(d => scaleMins(d.value))\r\n            .endAngle(d => scaleMins(d.value))\r\n\r\n        const hourArc = d3.arc()\r\n            .innerRadius(0)\r\n            .outerRadius(canvasHeight/3)\r\n            .startAngle(d => scaleHours(d.value))\r\n            .endAngle(d => scaleHours(d.value))\r\n       \r\n        //attch hands to canvas\r\n        canvas.append(\"path\")\r\n            .attr(\"d\", secondArc(data[0]))\r\n            .attr(\"stroke\", \"black\")\r\n            .attr(\"stroke-width\", \"2\")\r\n            .attr(\"fill\", \"none\")\r\n\r\n        canvas.append(\"path\")\r\n            .attr(\"d\", minuteArc(data[1]))\r\n            .attr(\"stroke\", \"black\")\r\n            .attr(\"stroke-width\", \"4\")\r\n            .attr(\"fill\", \"none\")\r\n        \r\n        canvas.append(\"path\")\r\n            .attr(\"d\", hourArc(data[2]))\r\n            .attr(\"stroke\", \"black\")\r\n            .attr(\"stroke-width\", \"4\")\r\n            .attr(\"fill\", \"none\")\r\n\r\n    }\r\n\r\n    //draw\r\n    draw = () => {\r\n        const {canvasHeight, canvasWidth} = this.state;\r\n\r\n        //create canvas\r\n        const canvas = d3.select(this.refs.canvas)\r\n            .append(\"svg\")\r\n            .attr(\"width\", canvasWidth)\r\n            .attr(\"height\", canvasHeight)\r\n        \r\n        return canvas;\r\n    }\r\n\r\n    render(){\r\n        return <div className='viewHolder' ref='canvas'/>\r\n    } \r\n}","import React from 'react';\n\n//imported from https://upload.wikimedia.org/wikipedia/commons/1/1a/Blank_US_Map_%28states_only%29.svg\nexport default class BlankMap extends React.Component {\n\n  render() {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"959\" height=\"593\">\n        <g style={{fill: \"#D3D3D3\"}}>\n          <path id=\"AK\" d=\"M161.1 453.7l-.3 85.4 1.6 1 3.1.2 1.5-1.1h2.6l.2 2.9 7 6.8.5 2.6 3.4-1.9.6-.2.3-3.1 1.5-1.6 1.1-.2 1.9-1.5 3.1 2.1.6 2.9 1.9 1.1 1.1 2.4 3.9 1.8 3.4 6 2.7 3.9 2.3 2.7 1.5 3.7 5 1.8 5.2 2.1 1 4.4.5 3.1-1 3.4-1.8 2.3-1.6-.8-1.5-3.1-2.7-1.5-1.8-1.1-.8.8 1.5 2.7.2 3.7-1.1.5-1.9-1.9-2.1-1.3.5 1.6 1.3 1.8-.8.8s-.8-.3-1.3-1c-.5-.6-2.1-3.4-2.1-3.4l-1-2.3s-.3 1.3-1 1c-.6-.3-1.3-1.5-1.3-1.5l1.8-1.9-1.5-1.5v-5h-.8l-.8 3.4-1.1.5-1-3.7-.6-3.7-.8-.5.3 5.7v1.1l-1.5-1.3-3.6-6-2.1-.5-.6-3.7-1.6-2.9-1.6-1.1v-2.3l2.1-1.3-.5-.3-2.6.6-3.4-2.4-2.6-2.9-4.8-2.6-4-2.6 1.3-3.2V542l-1.8 1.6-2.9 1.1-3.7-1.1-5.7-2.4h-5.5l-.6.5-6.5-3.9-2.1-.3-2.7-5.8-3.6.3-3.6 1.5.5 4.5 1.1-2.9 1 .3-1.5 4.4 3.2-2.7.6 1.6-3.9 4.4-1.3-.3-.5-1.9-1.3-.8-1.3 1.1-2.7-1.8-3.1 2.1-1.8 2.1-3.4 2.1-4.7-.2-.5-2.1 3.7-.6v-1.3l-2.3-.6 1-2.4 2.3-3.9v-1.8l.2-.8 4.4-2.3 1 1.3h2.7l-1.3-2.6-3.7-.3-5 2.7-2.4 3.4-1.8 2.6-1.1 2.3-4.2 1.5-3.1 2.6-.3 1.6 2.3 1 .8 2.1-2.7 3.2-6.5 4.2-7.8 4.2-2.1 1.1-5.3 1.1-5.3 2.3 1.8 1.3-1.5 1.5-.5 1.1-2.7-1-3.2.2-.8 2.3h-1l.3-2.4-3.6 1.3-2.9 1-3.4-1.3-2.9 1.9h-3.2l-2.1 1.3-1.6.8-2.1-.3-2.6-1.1-2.3.6-1 1-1.6-1.1v-1.9l3.1-1.3 6.3.6 4.4-1.6 2.1-2.1 2.9-.6 1.8-.8 2.7.2 1.6 1.3 1-.3 2.3-2.7 3.1-1 3.4-.6 1.3-.3.6.5h.8l1.3-3.7 4-1.5 1.9-3.7 2.3-4.5 1.6-1.5.3-2.6-1.6 1.3-3.4.6-.6-2.4-1.3-.3-1 1-.2 2.9-1.5-.2-1.5-5.8-1.3 1.3-1.1-.5-.3-1.9-4 .2-2.1 1.1-2.6-.3 1.5-1.5.5-2.6-.6-1.9 1.5-1 1.3-.2-.6-1.8v-4.4l-1-1-.8 1.5h-6.1l-1.5-1.3-.6-3.9-2.1-3.6v-1l2.1-.8.2-2.1 1.1-1.1-.8-.5-1.3.5-1.1-2.7 1-5 4.5-3.2 2.6-1.6 1.9-3.7 2.7-1.3 2.6 1.1.3 2.4 2.4-.3 3.2-2.4 1.6.6 1 .6h1.6l2.3-1.3.8-4.4s.3-2.9 1-3.4c.6-.5 1-1 1-1l-1.1-1.9-2.6.8-3.2.8-1.9-.5-3.6-1.8-5-.2-3.6-3.7.5-3.9.6-2.4-2.1-1.8-1.9-3.7.5-.8 6.8-.5h2.1l1 1h.6l-.2-1.6 3.9-.6 2.6.3 1.5 1.1-1.5 2.1-.5 1.5 2.7 1.6 5 1.8 1.8-1-2.3-4.4-1-3.2 1-.8-3.4-1.9-.5-1.1.5-1.6-.8-3.9-2.9-4.7-2.4-4.2 2.9-1.9h3.2l1.8.6 4.2-.2 3.7-3.6 1.1-3.1 3.7-2.4 1.6 1 2.7-.6 3.7-2.1 1.1-.2 1 .8 4.5-.2 2.7-3.1h1.1l3.6 2.4 1.9 2.1-.5 1.1.6 1.1 1.6-1.6 3.9.3.3 3.7 1.9 1.5 7.1.6 6.3 4.2 1.5-1 5.2 2.6 2.1-.6 1.9-.8 4.8 1.9zM46 482.6l2.1 5.3-.2 1-2.9-.3-1.8-4-1.8-1.5H39l-.2-2.6 1.8-2.4 1.1 2.4 1.5 1.5zm-2.6 33.5l3.7.8 3.7 1 .8 1-1.6 3.7-3.1-.2-3.4-3.6zM22.7 502l1.1 2.6 1.1 1.6-1.1.8-2.1-3.1V502zM9 575.1l3.4-2.3 3.4-1 2.6.3.5 1.6 1.9.5 1.9-1.9-.3-1.6 2.7-.6 2.9 2.6-1.1 1.8-4.4 1.1-2.7-.5-3.7-1.1-4.4 1.5-1.6.3zm48.9-4.5l1.6 1.9 2.1-1.6-1.5-1.3zm2.9 3l1.1-2.3 2.1.3-.8 1.9h-2.4zm23.6-1.9l1.5 1.8 1-1.1-.8-1.9zm8.8-12.5l1.1 5.8 2.9.8 5-2.9 4.4-2.6-1.6-2.4.5-2.4-2.1 1.3-2.9-.8 1.6-1.1 1.9.8 3.9-1.8.5-1.5-2.4-.8.8-1.9-2.7 1.9-4.7 3.6-4.8 2.9zm42.3-19.8l2.4-1.5-1-1.8-1.8 1z\">\n            <title>Alaska</title>\n          </path>\n          <path id=\"HI\" d=\"M233.1 519.3l1.9-3.6 2.3-.3.3.8-2.1 3.1zm10.2-3.7l6.1 2.6 2.1-.3 1.6-3.9-.6-3.4-4.2-.5-4 1.8zm30.7 10l3.7 5.5 2.4-.3 1.1-.5 1.5 1.3 3.7-.2 1-1.5-2.9-1.8-1.9-3.7-2.1-3.6-5.8 2.9zm20.2 8.9l1.3-1.9 4.7 1 .6-.5 6.1.6-.3 1.3-2.6 1.5-4.4-.3zm5.3 5.2l1.9 3.9 3.1-1.1.3-1.6-1.6-2.1-3.7-.3zm7-1.2l2.3-2.9 4.7 2.4 4.4 1.1 4.4 2.7v1.9l-3.6 1.8-4.8 1-2.4-1.5zm16.6 15.6l1.6-1.3 3.4 1.6 7.6 3.6 3.4 2.1 1.6 2.4 1.9 4.4 4 2.6-.3 1.3-3.9 3.2-4.2 1.5-1.5-.6-3.1 1.8-2.4 3.2-2.3 2.9-1.8-.2-3.6-2.6-.3-4.5.6-2.4-1.6-5.7-2.1-1.8-.2-2.6 2.3-1 2.1-3.1.5-1-1.6-1.8z\">\n            <title>Hawaii</title>\n          </path>\n          <path id=\"AL\" d=\"M628.5 466.4l.6.2 1.3-2.7 1.5-4.4 2.3.6 3.1 6v1l-2.7 1.9 2.7.3 5.2-2.5-.3-7.6-2.5-1.8-2-2 .4-4 10.5-1.5 25.7-2.9 6.7-.6 5.6.1-.5-2.2-1.5-.8-.9-1.1 1-2.6-.4-5.2-1.6-4.5.8-5.1 1.7-4.8-.2-1.7-1.8-.7-.5-3.6-2.7-3.4-2-6.5-1.4-6.7-1.8-5-3.8-16-3.5-7.9-.8-5.6.1-2.2-9 .8-23.4 2.2-12.2.8-.2 6.4.2 16.7-.7 31-.3 14.1 2.8 18.8 1.6 14.7z\">\n            <title>Alabama</title>\n          </path>\n          <path id=\"AR\" d=\"M587.3 346.1l-6.4-.7.9-3.1 3.1-2.6.6-2.3-1.8-2.9-31.9 1.2-23.3.7-23.6.3 1.5 6.9.1 8.5 1.4 10.9.3 38.2 2.1 1.6 3-1.2 2.9 1.2.4 10.1 25.2-.2 26.8-.8.9-1.9-.3-3.8-1.7-3.1 1.5-1.4-1.4-2.2.7-2.4 1.1-5.9 2.7-2.3-.8-2.2 4-5.6 2.5-1.1-.1-1.7-.5-1.7 2.9-5.8 2.5-1.1.2-3.3 2.1-1.4.9-4.1-1.4-4 4.2-2.4.3-2.1 1.2-4.2.9-3.1z\">\n            <title>Arkansas</title>\n          </path>\n          <path id=\"AZ\" d=\"M135.1 389.7l-.3 1.5.5 1 18.9 10.7 12.1 7.6 14.7 8.6 16.8 10 12.3 2.4 25.4 2.7 6-39.6 7-53.1 4.4-31-24.6-3.6-60.7-11-.2 1.1-2.6 16.5-2.1 3.8-2.8-.2-1.2-2.6-2.6-.4-1.2-1.1-1.1.1-2.1 1.7-.3 6.8-.3 1.5-.5 12.5-1.5 2.4-.4 3.3 2.8 5 1.1 5.5.7 1.1 1.1.9-.4 2.4-1.7 1.2-3.4 1.6-1.6 1.8-1.6 3.6-.5 4.9-3 2.9-1.9.9-.1 5.8-.6 1.6.5.8 3.9.4-.9 3-1.7 2.4-3.7.4z\">\n            <title>Arizona</title>\n          </path>\n          <path id=\"CA\" d=\"M122.7 385.9l-19.7-2.7-10-1.5-.5-1.8v-9.4l-.3-3.2-2.6-4.2-.8-2.3-3.9-4.2-2.9-4.7-2.7-.2-3.2-.8-.3-1 1.5-.6-.6-3.2-1.5-2.1-4.8-.8-3.9-2.1-1.1-2.3-2.6-4.8-2.9-3.1H57l-3.9-2.1-4.5-1.8-4.2-.5-2.4-2.7.5-1.9 1.8-7.1.8-1.9v-2.4l-1.6-1-.5-2.9-1.5-2.6-3.4-5.8-1.3-3.1-1.5-4.7-1.6-5.3-3.2-4.4-.5-2.9.8-3.9h1.1l2.1-1.6 1.1-3.6-1-2.7-2.7-.5-1.9-2.6-2.1-3.7-.2-8.2.6-1.9.6-2.3.5-2.4-5.7-6.3V236l.3-.5.3-3.2-1.3-4-2.3-4.8-2.7-4.5-1.8-3.9 1-3.7.6-5.8 1.8-3.1.3-6.5-1.1-3.6-1.6-4.2L14 184l.8-3.2 1.5-4.2 1.8-.8.3-1.1 3.1-2.6 5.2-11.8.2-7.4 1.69-4.9 38.69 11.8 25.6 6.6-8 31.3-8.67 33.1L88.84 250 131 312.3l17.1 26.1-.4 3.1 2.8 5.2 1.1 5.4 1 1.5.7.6-.2 1.4-1.4 1-3.4 1.6-1.9 2.1-1.7 3.9-.5 4.7-2.6 2.5-2.3 1.1-.1 6.2-.6 1.9 1 1.7 3 .3-.4 1.6-1.4 2-3.9.6zM48.8 337l1.3 1.5-.2 1.3-3.2-.1-.6-1.2-.6-1.5zm1.9 0l1.2-.6 3.6 2.1 3.1 1.2-.9.6-4.5-.2-1.6-1.6zm20.7 19.8l1.8 2.3.8 1 1.5.6.6-1.5-1-1.8-2.7-2-1.1.2v1.2zm-1.4 8.7l1.8 3.2 1.2 1.9-1.5.2-1.3-1.2s-.7-1.5-.7-1.9v-2.2z\">\n            <title>California</title>\n          </path>\n          <path id=\"CO\" d=\"M380.2 235.5l-36-3.5-79.1-8.6-2.2 22.1-7 50.4-1.9 13.7 34 3.9 37.5 4.4 34.7 3 14.3.6z\">\n            <title>Colorado</title>\n          </path>\n          <path id=\"CT\" d=\"M852 190.9l3.6-3.2 1.9-2.1.8.6 2.7-1.5 5.2-1.1 7-3.5-.6-4.2-.8-4.4-1.6-6-4.3 1.1-21.8 4.7.6 3.1 1.5 7.3v8.3l-.9 2.1 1.7 2.2z\">\n            <title>Connecticut</title>\n          </path>\n          <path id=\"DE\" d=\"M834.4 247.2l-1 .5-3.6-2.4-1.8-4.7-1.9-3.6-2.3-1-2.1-3.6.5-2 .5-2.3.1-1.1-.6.1-1.7 1-2 1.7-.2.3 1.4 4.1 2.3 5.6 3.7 16.1 5-.3 6-1.1z\">\n            <title>Delaware</title>\n          </path>\n          <path id=\"FL\" d=\"M750.2 445.2l-5.2-.7-.7.8 1.5 4.4-.4 5.2-4.1-1-.2-2.8H737l-5.3.7-32.4 1.9-8.2-.3-1.7-1.7-2.5-4.2H681l-6.6.5-35.4 4.2-.3 2.8 1.6 1.6 2.9 2 .3 8.4 3.3-.6 6-2.1 6-.5 4.4-.6 7.6 1.8 8.1 3.9 1.6 1.5 2.9 1.1 1.6 1.9.3 2.7 3.2-1.3h3.9l3.6-1.9 3.7-3.6 3.1.2.5-1.1-.8-1 .2-1.9 4-.8h2.6l2.9 1.5 4.2 1.5 2.4 3.7 2.7 1 1.1 3.4 3.4 1.6 1.6 2.6 1.9.6 5.2 1.3 1.3 3.1 3 3.7v9.5l-1.5 4.7.3 2.7 1.3 4.8 1.8 4 .8-.5 1.5-4.5-2.6-1-.3-.6 1.6-.6 4.5 1 .2 1.6-3.2 5.5-2.1 2.4 3.6 3.7 2.6 3.1 2.9 5.3 2.9 3.9 2.1 5 1.8.3 1.6-2.1 1.8 1.1 2.6 4 .6 3.6 3.1 4.4.8-1.3 3.9.3 3.6 2.3 3.4 5.2.8 3.4.3 2.9 1.1 1 1.3.5 2.4-1 1.5-1.6 3.9-.2 3.1-1.5 2.7-3.2-.5-1.9-.3-2.4.6-1.9-.3-1.9 2.4-1.3.3-3.4-.6-1.8-.5-12-1.3-7.6-4.5-8.2-3.6-5.8-2.6-5.3-2.9-2.9-2.9-7.4.7-1.4 1.1-1.3-1.6-2.9-4-3.7-4.8-5.5-3.7-6.3-5.3-9.4-3.7-9.7-2.3-7.3zm17.7 132.7l2.4-.6 1.3-.2 1.5-2.3 2.3-1.6 1.3.5 1.7.3.4 1.1-3.5 1.2-4.2 1.5-2.3 1.2zm13.5-5l1.2 1.1 2.7-2.1 5.3-4.2 3.7-3.9 2.5-6.6 1-1.7.2-3.4-.7.5-1 2.8-1.5 4.6-3.2 5.3-4.4 4.2-3.4 1.9z\">\n            <title>Florida</title>\n          </path>\n          <path id=\"GA\" d=\"M750.2 444.2l-5.6-.7-1.4 1.6 1.6 4.7-.3 3.9-2.2-.6-.2-3h-5.2l-5.3.7-32.3 1.9-7.7-.3-1.4-1.2-2.5-4.3-.8-3.3-1.6-.9-.5-.5.9-2.2-.4-5.5-1.6-4.5.8-4.9 1.7-4.8-.2-2.5-1.9-.7-.4-3.2-2.8-3.5-1.9-6.2-1.5-7-1.7-4.8-3.8-16-3.5-8-.8-5.3.1-2.3 3.3-.3 13.6-1.6 18.6-2 6.3-1.1.5 1.4-2.2.9-.9 2.2.4 2 1.4 1.6 4.3 2.7 3.2-.1 3.2 4.7.6 1.6 2.3 2.8.5 1.7 4.7 1.8 3 2.2 2.3 3 2.3 1.3 2 1.8 1.4 2.7 2.1 1.9 4.1 1.8 2.7 6 1.7 5.1 2.8.7 2.1 1.9 2 5.7 2.9 1.6 1.7-.8.4 1.2-3.3 6.2.5 2.6-1.5 4.2-2.3 10 .8 6.3z\">\n            <title>Georgia</title>\n          </path>\n          <path id=\"IA\" d=\"M556.8 183.6l2.1 2.1.3.7-2 3 .3 4 2.6 4.1 3.1 1.6 2.4.3.9 1.8.2 2.4 2.5 1 .9 1.1.5 1.6 3.8 3.3.6 1.9-.7 3-1.7 3.7-.6 2.4-2.1 1.6-1.6.5-5.7 1.5-1.6 4.8.8 1.8 1.7 1.5-.2 3.5-1.9 1.4-.7 1.8v2.4l-1.4.4-1.7 1.4-.5 1.7.4 1.7-1.3 1-2.3-2.7-1.4-2.8-8.3.8-10 .6-49.2 1.2-1.6-4.3-.4-6.7-1.4-4.2-.7-5.2-2.2-3.7-1-4.6-2.7-7.8-1.1-5.6-1.4-1.9-1.3-2.9 1.7-3.8 1.2-6.1-2.7-2.2-.3-2.4.7-2.4 1.8-.3 61.1-.6 21.2-.7z\">\n            <title>Iowa</title>\n          </path>\n          <path id=\"ID\" d=\"M175.3 27.63l-4.8 17.41L166 65.9l-3.4 16.22-.4 9.67 1.2 4.44 3.5 2.66-.2 3.91-3.9 4.4-4.5 6.6-.9 2.9-1.2 1.1-1.8.8-4.3 5.3-.4 3.1-.4 1.1.6 1 2.6-.1 1.1 2.3-2.4 5.8-1.2 4.2-8.8 35.3 20.7 4.5 39.5 7.9 34.8 6.1 4.9-29.2 3.8-24.1-2.7-2.4-.4-2.6-.8-1.1-2.1 1-.7 2.6-3.2.5-3.9-1.6-3.8.1-2.5.7-3.4-1.5-2.4.2-2.4 2-2-1.1-.7-4 .7-2.9-2.5-2.9-3.3-2.6-2.7-13.1-.1-4.7-.3-.1-.2.4-5.1 3.5-1.7-.2-2.9-3.4-.2-3.1 7-17.13-.4-1.94-3.4-1.15-.6-1.18-2.6-3.46-4.6-10.23-3.2-1.53-2-4.95 1.3-4.63-3.2-7.58 4.4-21.52z\">\n            <title>Idaho</title>\n          </path>\n          <path id=\"IL\" d=\"M618.7 214.3l-.8-2.6-1.3-3.7-1.6-1.8-1.5-2.6-.4-5.5-15.9 1.8-17.4 1h-12.3l.2 2.1 2.2.9 1.1 1.4.4 1.4 3.9 3.4.7 2.4-.7 3.3-1.7 3.7-.8 2.7-2.4 1.9-1.9.6-5.2 1.3-1.3 4.1.6 1.1 1.9 1.8-.2 4.3-2.1 1.6-.5 1.3v2.8l-1.8.6-1.4 1.2-.4 1.2.4 2-1.6 1.3-.9 2.8.3 3.9 2.3 7 7 7.6 5.7 3.7v4.4l.7 1.2 6.6.6 2.7 1.4-.7 3.5-2.2 6.2-.8 3 2 3.7 6.4 5.3 4.8.8 2.2 5.1 2 3.4-.9 2.8 1.5 3.8 1.7 2.1 1.6-.3 1-2.2 2.4-1.7 2.8-1 6.1 2.5.5-.2v-1.1l-1.2-2.7.4-2.8 2.4-1.6 3.4-1.2-.5-1.3-.8-2 1.2-1.3 1-2.7v-4l.4-4.9 2.5-3 1.8-3.8 2.5-4-.5-5.3-1.8-3.2-.3-3.3.8-5.3-.7-7.2-1.1-15.8-1.4-15.3-.9-11.7z\">\n            <title>Illinois</title>\n          </path>\n          <path id=\"IN\" d=\"M622.9 216.1l1.5 1 1.1-.3 2.1-1.9 2.5-1.8 14.3-1.1 18.4-1.8 1.6 15.5 4.9 42.6-.6 2.9 1.3 1.6.2 1.3-2.3 1.6-3.6 1.7-3.2.4-.5 4.8-4.7 3.6-2.9 4 .2 2.4-.5 1.4h-3.5l-1.4-1.7-5.2 3 .2 3.1-.9.2-.5-.9-2.4-1.7-3.6 1.5-1.4 2.9-1.2-.6-1.6-1.8-4.4.5-5.7 1-2.5 1.3v-2.6l.4-4.7 2.3-2.9 1.8-3.9 2.7-4.2-.5-5.8-1.8-3.1-.3-3.2.8-5.3-.7-7.1-.9-12.6-2.5-30.1z\">\n            <title>Indiana</title>\n          </path>\n          <path id=\"KS\" d=\"M485.9 259.5l-43.8-.6-40.6-1.2-21.7-.9-4.3 64.8 24.3 1 44.7 2.1 46.3.6 12.6-.3.7-35-1.2-11.1-2.5-2-2.4-3-2.3-3.6.6-3 1.7-1.4v-2.1l-.8-.7-2.6-.2-3.5-3.4z\">\n            <title>Kansas</title>\n          </path>\n          <path id=\"KY\" d=\"M607.2 331.8l12.6-.7.1-4.1h4.3l30.4-3.2 45.1-4.3 5.6-3.6 3.9-2.1.1-1.9 6-7.8 4.1-3.6 2.1-2.4-3.3-2-2.5-2.7-3-3.8-.5-2.2-2.6-1.4-.9-1.9-.2-6.1-2.6-2-1.9-1.1-.5-2.3-1.3.2-2 1.2-2.5 2.7-1.9-1.7-2.5-.5-2.4 1.4h-2.3l-1.8-2-5.6-.1-1.8-4.5-2.9-1.5-2.1.8-4.2.2-.5 2.1 1.2 1.5.3 2.1-2.8 2-3.8 1.8-2.6.4-.5 4.5-4.9 3.6-2.6 3.7.2 2.2-.9 2.3-4.5-.1-1.3-1.3-3.9 2.2.2 3.3-2.4.6-.8-1.4-1.7-1.2-2.7 1.1-1.8 3.5-2.2-1-1.4-1.6-3.7.4-5.6 1-2.8 1.3-1.2 3.4-1 1 1.5 3.7-4.2 1.4-1.9 1.4-.4 2.2 1.2 2.4v2.2l-1.6.4-6.1-2.5-2.3.9-2 1.4-.8 1.8 1.7 2.4-.9 1.8-.1 3.3-2.4 1.3-2.1 1.7z\">\n            <title>Kentucky</title>\n          </path>\n          <path id=\"LA\" d=\"M526.9 485.9l8.1-.3 10.3 3.6 6.5 1.1 3.7-1.5 3.2 1.1 3.2 1 .8-2.1-3.2-1.1-2.6.5-2.7-1.6.8-1.5 3.1-1 1.8 1.5 1.8-1 3.2.6 1.5 2.4.3 2.3 4.5.3 1.8 1.8-.8 1.6-1.3.8 1.6 1.6 8.4 3.6 3.6-1.3 1-2.4 2.6-.6 1.8-1.5 1.3 1 .8 2.9-2.3.8.6.6 3.4-1.3 2.3-3.4.8-.5-2.1-.3.8-1.6-.2-1.5 2.1-.5 1.1-1.3.6.8.6 3.1 4.2.6 4 1.9 1 1.5h2.9l1.1 1 2.3-3.1V493h-1.3l-3.4-2.7-5.8-.8-3.2-2.3 1.1-2.7 2.3.3.2-.6-1.8-1v-.5h3.2l1.8-3.1-1.3-1.9-.3-2.7-1.5.2-1.9 2.1-.6 2.6-3.1-.6-1-1.8 1.8-1.9 1.9-1.7-2.2-6.5-3.4-3.4 1-7.3-.2-.5-1.3.2-33.1 1.4-.8-2.4.8-8.5 8.6-14.8-.9-2.6 1.4-.4.4-2-2.2-2 .1-1.9-2-4.5-.4-5.1.1-.7-26.4.8-25.2.1.4 9.7.7 9.5.5 3.7 2.6 4.5.9 4.4 4.3 6 .3 3.1.6.8-.7 8.3-2.8 4.6 1.2 2.4-.5 2.6-.8 7.3-1.3 3 .2 3.7z\">\n            <title>Louisiana</title>\n          </path>\n          <path id=\"MA\" d=\"M887.5 172.5l-.5-2.3.8-1.5 2.9-1.5.8 3.1-.5 1.8-2.4 1.5v1l1.9-1.5 3.9-4.5 3.9-1.9 4.2-1.5-.3-2.4-1-2.9-1.9-2.4-1.8-.8-2.1.2-.5.5 1 1.3 1.5-.8 2.1 1.6.8 2.7-1.8 1.8-2.3 1-3.6-.5-3.9-6-2.3-2.6h-1.8l-1.1.8-1.9-2.6.3-1.5 2.4-5.2-2.9-4.4-3.7 1.8-1.8 2.9-18.3 4.7-13.8 2.5-.6 10.6.7 4.9 22-4.8 11.2-2.8 2 1.6 3.4 4.3 2.9 4.7zm12.5 1.4l2.2-.7.5-1.7 1 .1 1 2.3-1.3.5-3.9.1zm-9.4.8l2.3-2.6h1.6l1.8 1.5-2.4 1-2.2 1z\">\n            <title>Massachusetts</title>\n          </path>\n          <path id=\"MD\" d=\"M834.8 264.1l1.7-3.8.5-4.8-6.3 1.1-5.8.3-3.8-16.8-2.3-5.5-1.5-4.6-22.2 4.3-37.6 7.6 2 10.4 4.8-4.9 2.5-.7 1.4-1.5 1.8-2.7 1.6.7 2.6-.2 2.6-2.1 2-1.5 2.1-.6 1.5 1.1 2.7 1.4 1.9 1.8 1.3 1.4 4.8 1.6-.6 2.9 5.8 2.1 2.1-2.6 3.7 2.5-2.1 3.3-.7 3.3-1.8 2.6v2.1l.3.8 2 1.3 3.4 1.1 4.3-.1 3.1 1 2.1.3 1-2.1-1.5-2.1v-1.8l-2.4-2.1-2.1-5.5 1.3-5.3-.2-2.1-1.3-1.3s1.5-1.6 1.5-2.3c0-.6.5-2.1.5-2.1l1.9-1.3 1.9-1.6.5 1-1.5 1.6-1.3 3.7.3 1.1 1.8.3.5 5.5-2.1 1 .3 3.6.5-.2 1.1-1.9 1.6 1.8-1.6 1.3-.3 3.4 2.6 3.4 3.9.5 1.6-.8 3.2 4.2 1 .4zm-14.5.2l1.1 2.5.2 1.8 1.1 1.9s.9-.9.9-1.2c0-.3-.7-3.1-.7-3.1l-.7-2.3z\">\n            <title>Maryland</title>\n          </path>\n          <path id=\"ME\" d=\"M865.8 91.9l1.5.4v-2.6l.8-5.5 2.6-4.7 1.5-4-1.9-2.4v-6l.8-1 .8-2.7-.2-1.5-.2-4.8 1.8-4.8 2.9-8.9 2.1-4.2h1.3l1.3.2v1.1l1.3 2.3 2.7.6.8-.8v-1l4-2.9 1.8-1.8 1.5.2 6 2.4 1.9 1 9.1 29.9h6l.8 1.9.2 4.8 2.9 2.3h.8l.2-.5-.5-1.1 2.8-.5 1.9 2.1 2.3 3.7V85l-2.1 4.7-1.9.6-3.4 3.1-4.8 5.5h-1.3c-.6 0-1-2.1-1-2.1l-1.8.2-1 1.5-2.4 1.5-1 1.5 1.6 1.5-.5.6-.5 2.7-1.9-.2v-1.6l-.3-1.3-1.5.3-1.8-3.2-2.1 1.3 1.3 1.5.3 1.1-.8 1.3.3 3.1.2 1.6-1.6 2.6-2.9.5-.3 2.9-5.3 3.1-1.3.5-1.6-1.5-3.1 3.6 1 3.2-1.5 1.3-.2 4.4-1.1 6.3-2.2-.9-.5-3.1-4-1.1-.2-2.5-11.7-37.43zm36.5 15.6l1.5-1.5 1.4 1.1.6 2.4-1.7.9zm6.7-5.9l1.8 1.9s1.3.1 1.3-.2c0-.3.2-2 .2-2l.9-.8-.8-1.8-2 .7z\">\n            <title>Maine</title>\n          </path>\n          <path id=\"MI\" d=\"M644.5 211l19.1-1.9.2 1.1 9.9-1.5 12-1.7.1-.6.2-1.5 2.1-3.7 2-1.7-.2-5.1 1.6-1.6 1.1-.3.2-3.6 1.5-3 1.1.6.2.6.8.2 1.9-1-.4-9.1-3.2-8.2-2.3-9.1-2.4-3.2-2.6-1.8-1.6 1.1-3.9 1.8-1.9 5-2.7 3.7-1.1.6-1.5-.6s-2.6-1.5-2.4-2.1c.2-.6.5-5 .5-5l3.4-1.3.8-3.4.6-2.6 2.4-1.6-.3-10-1.6-2.3-1.3-.8-.8-2.1.8-.8 1.6.3.2-1.6-2.6-2.2-1.3-2.6h-2.6l-4.5-1.5-5.5-3.4h-2.7l-.6.6-1-.5-3.1-2.3-2.9 1.8-2.9 2.3.3 3.6 1 .3 2.1.5.5.8-2.6.8-2.6.3-1.5 1.8-.3 2.1.3 1.6.3 5.5-3.6 2.1-.6-.2v-4.2l1.3-2.4.6-2.4-.8-.8-1.9.8-1 4.2-2.7 1.1-1.8 1.9-.2 1 .6.8-.6 2.6-2.3.5v1.1l.8 2.4-1.1 6.1-1.6 4 .6 4.7.5 1.1-.8 2.4-.3.8-.3 2.7 3.6 6 2.9 6.5 1.5 4.8-.8 4.7-1 6-2.4 5.2-.3 2.7-3.2 3.1zm-33.3-72.4l-1.3-1.1-1.8-10.4-3.7-1.3-1.7-2.3-12.6-2.8-2.8-1.1-8.1-2.2-7.8-1-3.9-5.3.7-.5 2.7-.8 3.6-2.3v-1l.6-.6 6-1 2.4-1.9 4.4-2.1.2-1.3 1.9-2.9 1.8-.8 1.3-1.8 2.3-2.3 4.4-2.4 4.7-.5 1.1 1.1-.3 1-3.7 1-1.5 3.1-2.3.8-.5 2.4-2.4 3.2-.3 2.6.8.5 1-1.1 3.6-2.9 1.3 1.3h2.3l3.2 1 1.5 1.1 1.5 3.1 2.7 2.7 3.9-.2 1.5-1 1.6 1.3 1.6.5 1.3-.8h1.1l1.6-1 4-3.6 3.4-1.1 6.6-.3 4.5-1.9 2.6-1.3 1.5.2v5.7l.5.3 2.9.8 1.9-.5 6.1-1.6 1.1-1.1 1.5.5v7l3.2 3.1 1.3.6 1.3 1-1.3.3-.8-.3-3.7-.5-2.1.6-2.3-.2-3.2 1.5h-1.8l-5.8-1.3-5.2.2-1.9 2.6-7 .6-2.4.8-1.1 3.1-1.3 1.1-.5-.2-1.5-1.6-4.5 2.4h-.6l-1.1-1.6-.8.2-1.9 4.4-1 4-3.2 6.9zm-29.6-56.5l1.8-2.1 2.2-.8 5.4-3.9 2.3-.6.5.5-5.1 5.1-3.3 1.9-2.1.9zm86.2 32.1l.6 2.5 3.2.2 1.3-1.2s-.1-1.5-.4-1.6c-.3-.2-1.6-1.9-1.6-1.9l-2.2.2-1.6.2-.3 1.1z\">\n            <title>Michigan</title>\n          </path>\n          <path id=\"MN\" d=\"M464.6 66.79l-.6 3.91v10.27l1.6 5.03 1.9 3.32.5 9.93 1.8 13.45 1.8 7.3.4 6.4v5.3l-1.6 1.8-1.8 1.3v1.5l.9 1.7 4.1 3.5.7 3.2v35.9l60.3-.6 21.2-.7-.5-6-1.8-2.1-7.2-4.6-3.6-5.3-3.4-.9-2-2.8h-3.2l-3.5-3.8-.5-7 .1-3.9 1.5-3-.7-2.7-2.8-3.1 2.2-6.1 5.4-4 1.2-1.4-.2-8 .2-3 2.6-3 3.8-2.9 1.3-.2 4.5-5 1.8-.8 2.3-3.9 2.4-3.6 3.1-2.6 4.8-2 9.2-4.1 3.9-1.8.6-2.3-4.4.4-.7 1.1h-.6l-1.8-3.1-8.9.3-1 .8h-1l-.5-1.3-.8-1.8-2.6.5-3.2 3.2-1.6.8h-3.1l-2.6-1v-2.1l-1.3-.2-.5.5-2.6-1.3-.5-2.9-1.5.5-.5 1-2.4-.5-5.3-2.4-3.9-2.6h-2.9l-1.3-1-2.3.6-1.1 1.1-.3 1.3h-4.8v-2.1l-6.3-.3-.3-1.5h-4.8l-1.6-1.6-1.5-6.1-.8-5.5-1.9-.8-2.3-.5-.6.2-.3 8.2-30.1-.03z\">\n            <title>Minnesota</title>\n          </path>\n          <path id=\"MO\" d=\"M593.1 338.7l.5-5.9 4.2-3.4 1.9-1v-2.9l.7-1.6-1.1-1.6-2.4.3-2.1-2.5-1.7-4.5.9-2.6-2-3.2-1.8-4.6-4.6-.7-6.8-5.6-2.2-4.2.8-3.3 2.2-6 .6-3-1.9-1-6.9-.6-1.1-1.9v-4.1l-5.3-3.5-7.2-7.8-2.3-7.3-.5-4.2.7-2.4-2.6-3.1-1.2-2.4-7.7.8-10 .6-48.8 1.2 1.3 2.6-.1 2.2 2.3 3.6 3 3.9 3.1 3 2.6.2 1.4 1.1v2.9l-1.8 1.6-.5 2.3 2.1 3.2 2.4 3 2.6 2.1 1.3 11.6-.8 40 .5 5.7 23.7-.2 23.3-.7 32.5-1.3 2.2 3.7-.8 3.1-3.1 2.5-.5 1.8 5.2.5 4.1-1.1z\">\n            <title>Missouri</title>\n          </path>\n          <path id=\"MS\" d=\"M604.3 472.5l2.6-4.2 1.8.8 6.8-1.9 2.1.3 1.5.8h5.2l.4-1.6-1.7-14.8-2.8-19 1-45.1-.2-16.7.2-6.3-4.8.3-19.6 1.6-13 .4-.2 3.2-2.8 1.3-2.6 5.1.5 1.6.1 2.4-2.9 1.1-3.5 5.1.8 2.3-3 2.5-1 5.7-.6 1.9 1.6 2.5-1.5 1.4 1.5 2.8.3 4.2-1.2 2.5-.2.9.4 5 2 4.5-.1 1.7 2.3 2-.7 3.1-.9.3.6 1.9-8.6 15-.8 8.2.5 1.5 24.2-.7 8.2-.7 1.9-.3.6 1.4-1 7.1 3.3 3.3 2.2 6.4z\">\n            <title>Mississippi</title>\n          </path>\n          <path id=\"MT\" d=\"M361.1 70.77l-5.3 57.13-1.3 15.2-59.1-6.6-49-7.1-1.4 11.2-1.9-1.7-.4-2.5-1.3-1.9-3.3 1.5-.7 2.5-2.3.3-3.8-1.6-4.1.1-2.4.7-3.2-1.5-3 .2-2.1 1.9-.9-.6-.7-3.4.7-3.2-2.7-3.2-3.3-2.5-2.5-12.6-.1-5.3-1.6-.8-.6 1-4.5 3.2-1.2-.1-2.3-2.8-.2-2.8 7-17.15-.6-2.67-3.5-1.12-.4-.91-2.7-3.5-4.6-10.41-3.2-1.58-1.8-4.26 1.3-4.63-3.2-7.57 4.4-21.29L222 37.3l18.4 3.4 32.3 5.3 29.3 4 29.2 3.5 30.8 3.07z\">\n            <title>Montana</title>\n          </path>\n          <path id=\"NC\" d=\"M786.7 357.7L774 350l-3.1-.8-16.6 2.1-1.6-3-2.8-2.2-16.7.5-7.4.9-9.2 4.5-6.8 2.7-6.5 1.2-13.4 1.4.1-4.1 1.7-1.3 2.7-.7.7-3.8 3.9-2.5 3.9-1.5 4.5-3.7 4.4-2.3.7-3.2 4.1-3.8.7 1 2.5.2 2.4-3.6 1.7-.4 2.6.3 1.8-4 2.5-2.4.5-1.8.1-3.5 4.4.1 38.5-5.6 57.5-12.3 2 4.8 3.6 6.5 2.4 2.4.6 2.3-2.4.2.8.6-.3 4.2-2.6 1.3-.6 2.1-1.3 2.9-3.7 1.6-2.4-.3-1.5-.2-1.6-1.3.3 1.3v1h1.9l.8 1.3-1.9 6.3h4.2l.6 1.6 2.3-2.3 1.3-.5-1.9 3.6-3.1 4.8H828l-1.1-.5-2.7.6-5.2 2.4-6.5 5.3-3.4 4.7-1.9 6.5-.5 2.4-4.7.5-5.1 1.5zm49.3-26.2l2.6-2.5 3.2-2.6 1.5-.6.2-2-.6-6.1-1.5-2.3-.6-1.9.7-.2 2.7 5.5.4 4.4-.2 3.4-3.4 1.5-2.8 2.4-1.1 1.2z\">\n            <title>North Carolina</title>\n          </path>\n          <path id=\"ND\" d=\"M471 126.4l-.4-6.2-1.8-7.3-1.8-13.61-.5-9.7-1.9-3.18-1.6-5.32V70.68l.6-3.85-1.8-5.54-28.6-.59-18.6-.6-26.5-1.3-25.2-2.16-.9 14.42-4.7 50.94 56.8 3.9 56.9 1.7z\">\n            <title>North Dakota</title>\n          </path>\n          <path id=\"NE\" d=\"M470.3 204.3l-1-2.3-.5-1.6-2.9-1.6-4.8-1.5-2.2-1.2-2.6.1-3.7.4-4.2 1.2-6-4.1-2.2-2-10.7.6-41.5-2.4-35.6-2.2-4.3 43.7 33.1 3.3-1.4 21.1 21.7 1 40.6 1.2 43.8.6h4.5l-2.2-3-2.6-3.9.1-2.3-1.4-2.7-1.9-5.2-.4-6.7-1.4-4.1-.5-5-2.3-3.7-1-4.7-2.8-7.9-1-5.3z\">\n            <title>Nebraska</title>\n          </path>\n          <path id=\"NH\" d=\"M881.7 141.3l1.1-3.2-2.7-1.2-.5-3.1-4.1-1.1-.3-3-11.7-37.48-.7.08-.6 1.6-.6-.5-1-1-1.5 1.9-.2 2.29.5 8.41 1.9 2.8v4.3l-3.9 4.8-2.4.9v.7l1.1 1.9v8.6l-.8 9.2-.2 4.7 1 1.4-.2 4.7-.5 1.5 1 1.1 5.1-1.2 13.8-3.5 1.7-2.9 4-1.9z\">\n            <title>New Hampshire</title>\n          </path>\n          <path id=\"NJ\" d=\"M823.7 228.3l.1-1.5 2.7-1.3 1.7-2.8 1.7-2.4 3.3-3.2v-1.2l-6.1-4.1-1-2.7-2.7-.3-.1-.9-.7-2.2 2.2-1.1.2-2.9-1.3-1.3.2-1.2 1.9-3.1V193l2.5-3.1 5.6 2.5 6.4 1.9 2.5 1.2.1 1.8-.5 2.7.4 4.5-2.1 1.9-1.1 1 .5.5 2.7-.3 1.1-.8 1.6 3.4.2 9.4.6 1.1-1.1 5.5-3.1 6.5-2.7 4-.8 4.8-2.1 2.4h-.8l-.3-2.7.8-1-.2-1.5-4-.6-4.8-2.3-3.2-2.9-1-2z\">\n            <title>New Jersey</title>\n          </path>\n          <path id=\"NM\" d=\"M270.2 429.4l-16.7-2.6-1.2 9.6-15.8-2 6-39.7 7-53.2 4.4-30.9 34 3.9 37.4 4.4 32 2.8-.3 10.8-1.4-.1-7.4 97.7-28.4-1.8-38.1-3.7.7 6.3z\">\n            <title>New Mexico</title>\n          </path>\n          <path id=\"NV\" d=\"M123.1 173.6l38.7 8.5 26 5.2-10.6 53.1-5.4 29.8-3.3 15.5-2.1 11.1-2.6 16.4-1.7 3.1-1.6-.1-1.2-2.6-2.8-.5-1.3-1.1-1.8.1-.9.8-1.8 1.3-.3 7.3-.3 1.5-.5 12.4-1.1 1.8-16.7-25.5-42.1-62.1-12.43-19 8.55-32.6 8.01-31.3z\">\n            <title>Nevada</title>\n          </path>\n          <path id=\"NY\" d=\"M843.4 200l.5-2.7-.2-2.4-3-1.5-6.5-2-6-2.6-.6-.4-2.7-.3-2-1.5-2.1-5.9-3.3-.5-2.4-2.4-38.4 8.1-31.6 6-.5-6.5 1.6-1.2 1.3-1.1 1-1.6 1.8-1.1 1.9-1.8.5-1.6 2.1-2.7 1.1-1-.2-1-1.3-3.1-1.8-.2-1.9-6.1 2.9-1.8 4.4-1.5 4-1.3 3.2-.5 6.3-.2 1.9 1.3 1.6.2 2.1-1.3 2.6-1.1 5.2-.5 2.1-1.8 1.8-3.2 1.6-1.9h2.1l1.9-1.1.2-2.3-1.5-2.1-.3-1.5 1.1-2.1v-1.5h-1.8l-1.8-.8-.8-1.1-.2-2.6 5.8-5.5.6-.8 1.5-2.9 2.9-4.5 2.7-3.7 2.1-2.4 2.4-1.8 3.1-1.2 5.5-1.3 3.2.2 4.5-1.5 7.4-2.2.7 4.9 2.4 6.5.8 5-1 4.2 2.6 4.5.8 2-.9 3.2 3.7 1.7 2.7 10.2v5.8l-.6 10.9.8 5.4.7 3.6 1.5 7.3v8.1l-1.1 2.3 2.1 2.7.5.9-1.9 1.8.3 1.3 1.3-.3 1.5-1.3 2.3-2.6 1.1-.6 1.6.6 2.3.2 7.9-3.9 2.9-2.7 1.3-1.5 4.2 1.6-3.4 3.6-3.9 2.9-7.1 5.3-2.6 1-5.8 1.9-4 1.1-1-.4z\">\n            <title>New York</title>\n          </path>\n          <path id=\"OH\" d=\"M663.8 211.2l1.7 15.5 4.8 41.1 3.9-.2 2.3-.8 3.6 1.8 1.7 4.2 5.4.1 1.8 2h1.7l2.4-1.4 3.1.5 1.5 1.3 1.8-2 2.3-1.4 2.4-.4.6 2.7 1.6 1 2.6 2 .8.2 2-.1 1.2-.6v-2.1l1.7-1.5.1-4.8 1.1-4.2 1.9-1.3 1 .7 1 1.1.7.2.4-.4-.9-2.7v-2.2l1.1-1.4 2.5-3.6 1.3-1.5 2.2.5 2.1-1.5 3-3.3 2.2-3.7.2-5.4.5-5V230l-1.2-3.2 1.2-1.8 1.3-1.2-.6-2.8-4.3-25.6-6.2 3.7-3.9 2.3-3.4 3.7-4 3.9-3.2.8-2.9.5-5.5 2.6-2.1.2-3.4-3.1-5.2.6-2.6-1.5-2.2-1.3z\">\n            <title>Ohio</title>\n          </path>\n          <path id=\"OK\" d=\"M411.9 334.9l-1.8 24.3-.9 18 .2 1.6 4 3.6 1.7.9h.9l.9-2.1 1.5 1.9 1.6.1.3-.2.2-1.1 2.8 1.4-.4 3.5 3.8.5 2.5 1 4.2.6 2.3 1.6 2.5-1.7 3.5.7 2.2 3.1 1.2.1v2.3l2.1.7 2.5-2.1 1.8.6 2.7.1.7 2.3 4.4 1.8 1.7-.3 1.9-4.2h1.3l1.1 2.1 4.2.8 3.4 1.3 3 .8 1.6-.7.7-2.7h4.5l1.9.9 2.7-1.9h1.4l.6 1.4h3.6l2-1.8 2.3.6 1.7 2.2 3 1.7 3.4.9 1.9 1.2-.3-37.6-1.4-10.9-.1-8.6-1.5-6.6-.6-6.8.1-4.3-12.6.3-46.3-.5-44.7-2.1-41.5-1.8-.4 10.7z\">\n            <title>Oklahoma</title>\n          </path>\n          <path id=\"OR\" d=\"M67.44 158.9l28.24 7.2 27.52 6.5 17 3.7 8.8-35.1 1.2-4.4 2.4-5.5-.7-1.3-2.5.1-1.3-1.8.6-1.5.4-3.3 4.7-5.7 1.9-.9.9-.8.7-2.7.8-1.1 3.9-5.7 3.7-4 .2-3.26-3.4-2.49-1.2-4.55-13.1-3.83L132.9 85l-14.8.37-1.1-1.31-5.1 1.84-4.5-.48-2.4-1.58-1.3.54-4.68-.29-1.96-1.43-4.84-1.77-1.1-.07-4.45-1.27-1.76 1.52-6.26-.24-5.31-3.85.21-9.28-2.05-3.5-4.1-.6-.7-2.5-2.4-.5-5.8 2.1-2.3 6.5-3.2 10-3.2 6.5-5 14.1-6.5 13.6-8.1 12.6-1.9 2.9-.8 8.6-1.3 6 2.71 3.5z\">\n            <title>Oregon</title>\n          </path>\n          <path id=\"PA\" d=\"M736.6 192.2l1.3-.5 5.7-5.5.7 6.9 33.5-6.5 36.9-7.8 2.3 2.3 3.1.4 2 5.6 2.4 1.9 2.8.4.1.1-2.6 3.2v3.1l-1.9 3.1-.2 1.9 1.3 1.3-.2 1.9-2.4 1.1 1 3.4.2 1.1 2.8.3.9 2.5 5.9 3.9v.4l-3.1 3-1.5 2.2-1.7 2.8-2.7 1.2-1.4.3-2.1 1.3-1.6 1.4-22.4 4.3L757 241l-11.3 1.4-3.9.7-5.1-22.4-4.3-25.9z\">\n            <title>Pennsylvania</title>\n          </path>\n          <path id=\"RI\" d=\"M873.6 175.7l-.8-4.4-1.6-6 5.7-1.5 1.5 1.3 3.4 4.3 2.8 4.4-2.8 1.4-1.3-.2-1.1 1.8-2.4 1.9-2.8 1.1z\">\n            <title>Rhode Island</title>\n          </path>\n          <path id=\"SC\" d=\"M759 413.6l-2.1-1-1.9-5.6-2.5-2.3-2.5-.5-1.5-4.6-3-6.5-4.2-1.8-1.9-1.8-1.2-2.6-2.4-2-2.3-1.3-2.2-2.9-3.2-2.4-4.4-1.7-.4-1.4-2.3-2.8-.5-1.5-3.8-5.4-3.4.1-3.9-2.5-1.2-1.2-.2-1.4.6-1.6 2.7-1.3-.8-2 6.4-2.7 9.2-4.5 7.1-.9 16.4-.5 2.3 1.9 1.8 3.5 4.6-.8 12.6-1.5 2.7.8 12.5 7.4 10.1 8.3-5.3 5.4-2.6 6.1-.5 6.3-1.6.8-1.1 2.7-2.4.6-2.1 3.6-2.7 2.7-2.3 3.4-1.6.8-3.6 3.4-2.9.2 1 3.2-5 5.3-2.3 1.6z\">\n            <title>South Carolina</title>\n          </path>\n          <path id=\"SD\" d=\"M471 181.1l-.9 3.2.4 3 2.6 2-1.2 5.4-1.8 4.1 1.5 3.3.7 1.1-1.3.1-.7-1.6-.6-2-3.3-1.8-4.8-1.5-2.5-1.3-2.9.1-3.9.4-3.8 1.2-5.3-3.8-2.7-2.4-10.9.8-41.5-2.4-35.6-2.2L354 162l2.8-34 .4-5 56.9 3.9 56.9 1.7v2.7l-1.3 1.5-2 1.5-.1 2.2 1.1 2.2 4.1 3.4.5 2.7v35.9z\">\n            <title>South Dakota</title>\n          </path>\n          <path id=\"TN\" d=\"M670.8 359.6l-13.1 1.2-23.3 2.2-37.6 2.7-11.8.4.9-.6.9-4.5-1.2-3.6 3.9-2.3.4-2.5 1.2-4.3 3-9.5.5-5.6.3-.2 12.3-.2 13.6-.8.1-3.9 3.5-.1 30.4-3.3 54-5.2 10.3-1.5 7.6-.2 2.4-1.9 1.3.3-.1 3.3-.4 1.6-2.4 2.2-1.6 3.6-2-.4-2.4.9-2.2 3.3-1.4-.2-.8-1.2-1.1.4-4.3 4-.8 3.1-4.2 2.2-4.3 3.6-3.8 1.5-4.4 2.8-.6 3.6-2.5.5-2 1.7-.2 4.8z\">\n            <title>Tennessee</title>\n          </path>\n          <path id=\"TX\" d=\"M282.8 425.6l37 3.6 29.3 1.9 7.4-97.7 54.4 2.4-1.7 23.3-1 18 .2 2 4.4 4.1 2 1.1h1.8l.5-1.2.7.9 2.4.2 1.1-.6v-.2l1 .5-.4 3.7 4.5.7 2.4.9 4.2.7 2.6 1.8 2.8-1.9 2.7.6 2.2 3.1.8.1v2.1l3.3 1.1 2.5-2.1 1.5.5 2.1.1.6 2.1 5.2 2 2.3-.5 1.9-4h.1l1.1 1.9 4.6.9 3.4 1.3 3.2 1 2.4-1.2.7-2.3h3.6l2.1 1 3-2h.4l.5 1.4h4.7l1.9-1.8 1.3.4 1.7 2.1 3.3 1.9 3.4 1 2.5 1.4 2.7 2 3.1-1.2 2.1.8.7 20 .7 9.5.6 4.1 2.6 4.4.9 4.5 4.2 5.9.3 3.1.6.8-.7 7.7-2.9 4.8 1.3 2.6-.5 2.4-.8 7.2-1.3 3 .3 4.2-5.6 1.6-9.9 4.5-1 1.9-2.6 1.9-2.1 1.5-1.3.8-5.7 5.3-2.7 2.1-5.3 3.2-5.7 2.4-6.3 3.4-1.8 1.5-5.8 3.6-3.4.6-3.9 5.5-4 .3-1 1.9 2.3 1.9-1.5 5.5-1.3 4.5-1.1 3.9-.8 4.5.8 2.4 1.8 7 1 6.1 1.8 2.7-1 1.5-3.1 1.9-5.7-3.9-5.5-1.1-1.3.5-3.2-.6-4.2-3.1-5.2-1.1-7.6-3.4-2.1-3.9-1.3-6.5-3.2-1.9-.6-2.3.6-.6.3-3.4-1.3-.6-.6-1 1.3-4.4-1.6-2.3-3.2-1.3-3.4-4.4-3.6-6.6-4.2-2.6.2-1.9-5.3-12.3-.8-4.2-1.8-1.9-.2-1.5-6-5.3-2.6-3.1v-1.1l-2.6-2.1-6.8-1.1-7.4-.6-3.1-2.3-4.5 1.8-3.6 1.5-2.3 3.2-1 3.7-4.4 6.1-2.4 2.4-2.6-1-1.8-1.1-1.9-.6-3.9-2.3v-.6l-1.8-1.9-5.2-2.1-7.4-7.8-2.3-4.7v-8.1l-3.2-6.5-.5-2.7-1.6-1-1.1-2.1-5-2.1-1.3-1.6-7.1-7.9-1.3-3.2-4.7-2.3-1.5-4.4-2.6-2.9-1.7-.5zm174.4 141.7l-.6-7.1-2.7-7.2-.6-7 1.5-8.2 3.3-6.9 3.5-5.4 3.2-3.6.6.2-4.8 6.6-4.4 6.5-2 6.6-.3 5.2.9 6.1 2.6 7.2.5 5.2.2 1.5z\">\n            <title>Texas</title>\n          </path>\n          <path id=\"UT\" d=\"M228.4 305.9l24.6 3.6 1.9-13.7 7-50.5 2.3-22-32.2-3.5 2.2-13.1 1.8-10.6-34.7-6.1-12.5-2.5-10.6 52.9-5.4 30-3.3 15.4-1.7 9.2z\">\n            <title>Utah</title>\n          </path>\n          <path id=\"VA\" d=\"M834.7 265.2l-.2 2.8-2.9 3.8-.4 4.6.5 3.4-1.8 5-2.2 1.9-1.5-4.6.4-5.4 1.6-4.2.7-3.3-.1-1.7zm-60.3 44.6l-38.6 5.6-4.8-.1-2.2-.3-2.5 1.9-7.3.1-10.3 1.6-6.7.6 4.1-2.6 4.1-2.3v-2.1l5.7-7.3 4.1-3.7 2.2-2.5 3.6 4.3 3.8.9 2.7-1 2-1.5 2.4 1.2 4.6-1.3 1.7-4.4 2.4.7 3.2-2.3 1.6.4 2.8-3.2.2-2.7-.8-1.2 4.8-10.5 1.8-5.2.5-4.7.7-.2 1.1 1.7 1.5 1.2 3.9-.2 1.7-8.1 3-.6.8-2.6 2.8-2.2 1.1-2.1 1.8-4.3.1-4.6 3.6 1.4 6.6 3.1.3-5.2 3.4 1.2-.6 2.9 8.6 3.1 1.4 1.8-.8 3.3-1.3 1.3-.5 1.7.5 2.4 2 1.3 3.9 1.4 2.9 1 4.9.9 2.2 2.1 3.2.4.9 1.2-.4 4.7 1.4 1.1-.5 1.9 1.2.8-.2 1.4-2.7-.1.1 1.6 2.3 1.5.1 1.4 1.8 1.8.5 2.5-2.6 1.4 1.6 1.5 5.8-1.7 3.7 6.2z\">\n            <title>Virginia</title>\n          </path>\n          <path id=\"VT\" d=\"M832.7 111.3l2.4 6.5.8 5.3-1 3.9 2.5 4.4.9 2.3-.7 2.6 3.3 1.5 2.9 10.8v5.3l11.5-2.1-1-1.1.6-1.9.2-4.3-1-1.4.2-4.7.8-9.3v-8.5l-1.1-1.8v-1.6l2.8-1.1 3.5-4.4v-3.6l-1.9-2.7-.3-5.79-26.1 6.79z\">\n            <title>Vermont</title>\n          </path>\n          <path id=\"WA\" d=\"M74.5 67.7l-2.3-4.3-4.1-.7-.4-2.4-2.5-.6-2.9-.5-1.8 1-2.3-2.9.3-2.9 2.7-.3 1.6-4-2.6-1.1.2-3.7 4.4-.6-2.7-2.7-1.5-7.1.6-2.9v-7.9l-1.8-3.2 2.3-9.4 2.1.5 2.4 2.9 2.7 2.6 3.2 1.9 4.5 2.1 3.1.6 2.9 1.5 3.4 1 2.3-.2V22l1.3-1.1 2.1-1.3.3 1.1.3 1.8-2.3.5-.3 2.1 1.8 1.5 1.1 2.4.6 1.9 1.5-.2.2-1.3-1-1.3-.5-3.2.8-1.8-.6-1.5V19l1.8-3.6-1.1-2.6L91.9 8l.3-.8 1.4-.8L98 7.9l9.7 2.7 8.6 1.9 20 5.7 23 5.7 15 3.49-4.8 17.56-4.5 20.83-3.4 16.25-.4 9.18-12.9-3.72-15.3-3.47-14.5.32-1.1-1.53-5.7 2.09-3.9-.42-2.6-1.79-1.7.65-4.15-.25-1.72-1.32-5.16-1.82-1.18-.16-4.8-1.39-1.92 1.65-5.65-.25-4.61-3.35zm9.6-55.4l2-.2.5 1.4 1.5-1.6h2.3l.8 1.5-1.5 1.7.6.8-.7 2-1.4.4s-.9.1-.9-.2c0-.3 1.5-2.6 1.5-2.6l-1.7-.6-.3 1.5-.7.6-1.5-2.3z\">\n            <title>Washington</title>\n          </path>\n          <path id=\"WI\" d=\"M541.4 109.9l2.9.5 2.9-.6 7.4-3.2 2.9-1.9 2.1-.8 1.9 1.5-1.1 1.1-1.9 3.1-.6 1.9 1 .6 1.8-1 1.1-.2 2.7.8.6 1.1 1.1.2.6-1.1 4 5.3 8.2 1.2 8.2 2.2 2.6 1.1 12.3 2.6 1.6 2.3 3.6 1.2L609 138l1.6 1.4 1.5.9-1.1 2.3-1.8 1.6-2.1 4.7-1.3 2.4.2 1.8 1.5.3 1.1-1.9 1.5-.8.8-2.3 1.9-1.8 2.7-4 4.2-6.3.8-.5.3 1-.2 2.3-2.9 6.8-2.7 5.7-.5 3.2-.6 2.6.8 1.3-.2 2.7-1.9 2.4-.5 1.8.6 3.6.6 3.4-1.5 2.6-.8 2.9-1 3.1 1.1 2.4.6 6.1 1.6 4.5-.2 3-15.9 1.8-17.5 1H567l-.7-1.5-2.9-.4-2.6-1.3-2.3-3.7-.3-3.6 2-2.9-.5-1.4-2.1-2.2-.8-3.3-.6-6.8-2.1-2.5-7-4.5-3.8-5.4-3.4-1-2.2-2.8h-3.2l-2.9-3.3-.5-6.5.1-3.8 1.5-3.1-.8-3.2-2.5-2.8 1.8-5.4 5.2-3.8 1.6-1.9-.2-8.1.2-2.8 2.4-2.8z\">\n            <title>Wisconsin</title>\n          </path>\n          <path id=\"WV\" d=\"M758.9 254.3l5.8-6 2.6-.8 1.6-1.5 1.5-2.2 1.1.3 3.1-.2 4.6-3.6 1.5-.5 1.3 1 2.6 1.2 3 3-.4 4.3-5.4-2.6-4.8-1.8-.1 5.9-2.6 5.7-2.9 2.4-.8 2.3-3 .5-1.7 8.1-2.8.2-1.1-1-1.2-2-2.2.5-.5 5.1-1.8 5.1-5 11 .9 1.4-.1 2-2.2 2.5-1.6-.4-3.1 2.3-2.8-.8-1.8 4.9-3.8 1-2.5-1.3-2.5 1.9-2.3.7-3.2-.8-3.8-4.5-3.5-2.2-2.5-2.5-2.9-3.7-.5-2.3-2.8-1.7-.6-1.3-.2-5.6.3.1 2.4-.2 1.8-1V275l1.7-1.5.1-5.2.9-3.6 1.1-.7.4.3 1 1.1 1.7.5 1.1-1.3-1-3.1v-1.6l3.1-4.6 1.2-1.3 2 .5 2.6-1.8 3.1-3.4 2.4-4.1.2-5.6.5-4.8v-4.9l-1.1-3 .9-1.3.8-.7 4.3 19.3 4.3-.8 11.2-1.3z\">\n            <title>West Virginia</title>\n          </path>\n          <path id=\"WY\" d=\"M353 161.9l-1.5 25.4-4.4 44-2.7-.3-83.3-9.1-27.9-3 2-12 6.9-41 3.8-24.2 1.3-11.2 48.2 7 59.1 6.5z\">\n            <title>Wyoming</title>\n          </path>\n          <g id=\"DC\">\n            <title>District of Columbia</title>\n            <path id=\"DC1\" d=\"M801.8 253.8l-1.1-1.6-1-.8 1.1-1.6 2.2 1.5z\"/>\n            <circle id=\"DC2\" stroke=\"#FFFFFF\" stroke-width=\"1.5\" cx=\"801.3\" cy=\"251.8\" r=\"5\" opacity=\"1\"/>\n          </g>\n        </g>\n        <path id=\"frames\" fill=\"none\" stroke=\"#A9A9A9\" stroke-width=\"2\" d=\"M215 493v55l36 45M0 425h147l68 68h85l54 54v46\"/>\n      </svg>\n    )\n  }\n}\n","import React from 'react';\r\nimport BlankMap from './Blank_US_Map_(states_only)';\r\n\r\nexport default class Map extends React.Component {\r\n\r\n    render(){\r\n        return <div className='viewHolder'><BlankMap/></div>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport BarChart from './components/BarChart';\r\nimport TempDisplay from './components/TempDisplay';\r\nimport ThreeLittleCircles from './components/ThreeLittleCircles';\r\nimport Clock from './components/Clock';\r\nimport Map from './components/Map';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      view: 0\r\n    }\r\n  }\r\n\r\n  showView = () => {\r\n    switch(this.state.view) {\r\n      case 1:\r\n        return <TempDisplay/>\r\n      case 2:\r\n        return <BarChart/>\r\n      case 3:\r\n        return <ThreeLittleCircles/>\r\n      case 4:\r\n        return <Clock/>\r\n      case 5:\r\n        return <Map/>\r\n      default:\r\n        return <Clock/>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <button onClick={() => this.setState({view: 1})}>Temperature Display</button>\r\n        <button onClick={() => this.setState({view: 2})}>Bar Chart</button>\r\n        <button onClick={() => this.setState({view: 3})}>Circles</button>\r\n        <button onClick={() => this.setState({view: 4})}>Clock</button>\r\n        <button onClick={() => this.setState({view: 5})}>Map</button>\r\n        {this.showView()}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}